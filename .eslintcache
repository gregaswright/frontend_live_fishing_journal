[{"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/reportWebVitals.js":"1","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/App.js":"2","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/LoginForm.js":"3","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/SignupForm.js":"4","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Container/AuthContainer.js":"5","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/EditProfileForm.js":"6","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/ProfileCard.js":"7","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Container/PinContainer.js":"8","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/PinCard.js":"9","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/FishJournalCard.js":"10","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/AddPinForm.js":"11","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/EditPinForm.js":"12","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/AddJournalForm.js":"13","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/EditJournalForm.js":"14","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Container/MapContainer.js":"15","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/index.js":"16","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/mapStyles.js":"17","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Container/FishContainer.js":"18","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/FishCard.js":"19","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/NavigationBar.js":"20","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/FishSearchForm.js":"21","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/FishTypeOption.js":"22","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/DoubleCheckDelete.js":"23","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/DoubleCheckDeletePin.js":"24","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/MoonPhase.js":"25"},{"size":362,"mtime":1607633257212,"results":"26","hashOfConfig":"27"},{"size":1845,"mtime":1609690614646,"results":"28","hashOfConfig":"27"},{"size":1264,"mtime":1609681471501,"results":"29","hashOfConfig":"27"},{"size":2244,"mtime":1609681594130,"results":"30","hashOfConfig":"27"},{"size":5995,"mtime":1609683407206,"results":"31","hashOfConfig":"27"},{"size":933,"mtime":1607703319979,"results":"32","hashOfConfig":"27"},{"size":940,"mtime":1607980371592,"results":"33","hashOfConfig":"27"},{"size":7051,"mtime":1608069219178,"results":"34","hashOfConfig":"27"},{"size":2543,"mtime":1608040891261,"results":"35","hashOfConfig":"27"},{"size":2646,"mtime":1609262216375,"results":"36","hashOfConfig":"27"},{"size":8262,"mtime":1609334199516,"results":"37","hashOfConfig":"27"},{"size":1084,"mtime":1607983037258,"results":"38","hashOfConfig":"27"},{"size":6857,"mtime":1609180331680,"results":"39","hashOfConfig":"27"},{"size":6558,"mtime":1609259682168,"results":"40","hashOfConfig":"27"},{"size":14193,"mtime":1609692789000,"results":"41","hashOfConfig":"27"},{"size":640,"mtime":1608731690143,"results":"42","hashOfConfig":"27"},{"size":1674,"mtime":1608211400150,"results":"43","hashOfConfig":"27"},{"size":2189,"mtime":1609338115287,"results":"44","hashOfConfig":"27"},{"size":2178,"mtime":1609159387463,"results":"45","hashOfConfig":"27"},{"size":1841,"mtime":1609698959698,"results":"46","hashOfConfig":"27"},{"size":398,"mtime":1609086407340,"results":"47","hashOfConfig":"27"},{"size":219,"mtime":1609173547433,"results":"48","hashOfConfig":"27"},{"size":1026,"mtime":1609262711126,"results":"49","hashOfConfig":"27"},{"size":1072,"mtime":1609332988367,"results":"50","hashOfConfig":"27"},{"size":7038,"mtime":1609696804115,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1kw21vf",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/reportWebVitals.js",[],["114","115"],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/App.js",[],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/LoginForm.js",["116"],"import React from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Redirect from 'react-router-dom'\n\nclass LoginForm extends React.Component {\n\n    state = {\n        username: \"\",\n        password: \"\"\n    }\n\n    changeHandler = (event) => {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault()\n        this.props.loginHandler(this.state)\n        // {this.props.user ? <Redirect to=\"/map\" /> : }\n    }\n\n    render(){\n        return (\n\n        <div>\n            <Form onSubmit={this.submitHandler}>\n            <Form.Group >\n                \n                <Form.Control type=\"text\" name=\"username\" placeholder=\"Enter User Name\" value={this.state.username} onChange={this.changeHandler}/>\n            </Form.Group>\n            <Form.Group >\n               \n                <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.changeHandler} />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n                Log-in\n            </Button>\n            </Form>           \n        </div>\n         \n        )\n    }\n    \n}\nexport default LoginForm",["117","118"],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/SignupForm.js",[],["119","120"],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Container/AuthContainer.js",["121","122"],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/EditProfileForm.js",[],["123","124"],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/ProfileCard.js",[],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Container/PinContainer.js",[],["125","126"],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/PinCard.js",[],["127","128"],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/FishJournalCard.js",[],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/AddPinForm.js",["129"],"import React from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport FishTypeOption from './FishTypeOption'\n\nclass AddPinForm extends React.Component {\n    state = {\n        title: \"\",\n        latitude: this.props.latLng.lat,\n        longitude: this.props.latLng.lng,\n        user_id: this.props.user.id,\n        fish_journals: [],\n        date: \"\",\n        fish_type: \"\",\n        fish_length: \"\",\n        fish_weight: \"\",\n        moon_phase: \"\",\n        tide: \"\",\n        rod_setup: \"\",\n        note: \"\",\n        image: \"\",\n        pin_id: \"\",\n        sea_creatures: [],\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:3000/api/v1/sea_creatures')\n        .then(response => response.json())\n        .then(data => this.setState({sea_creatures: data}));\n    }\n\n    changeHandler = (event) => {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault()\n        this.checkImage()\n        setTimeout(() => {\n            this.props.addPin(this.state)    \n        }, 2000);\n    }\n\n\n    checkImage = () => {\n        let creatureImg = this.state.sea_creatures.filter(creature => creature.species_name === this.state.fish_type)\n        {this.state.image === \"\" && this.setState({ image: creatureImg[0].image })}\n    }\n\n    renderCreaturesData = () => {\n        let filterByRegion = this.state.sea_creatures.filter(creature => creature.fisheries_region.includes(\"Greater Atlantic\")) \n        return filterByRegion.map(creature => <FishTypeOption key={creature.id} creature={creature}/>)\n    }\n\n    render(){\n        return (\n            <Modal\n            show={this.props.closeForm}\n            onHide={this.props.closeForm}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Header closeButton>\n              <Modal.Title id=\"contained-modal-title-vcenter\">\n                Add New Fish Pin \n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={this.submitHandler}>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridPassword\">\n                        <Form.Label>Pin Title</Form.Label>\n                        <Form.Control type=\"text\" name=\"title\" placeholder=\"Pin Title\" value={this.state.title} onChange={this.changeHandler} />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridState\">\n                        <Form.Label>Fish Type</Form.Label>\n                        <Form.Control as=\"select\" htmlSize={5} name=\"fish_type\" placeholder=\"fish_type\" value={this.state.fish_type} onChange={this.changeHandler}>\n                            {this.renderCreaturesData()}\n                        </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridPassword\">\n                        <Form.Label>Image url</Form.Label>\n                        <Form.Control type=\"text\" name=\"image\" placeholder=\"Image url\" value={this.state.image} onChange={this.changeHandler} />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\n                        <Form.Label>Date Caught</Form.Label>\n                        <Form.Control type=\"number\" name=\"date\" placeholder=\"Date Caught\" value={this.state.date} onChange={this.changeHandler} />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridCity\">\n                        <Form.Label>Length Feet&Inches</Form.Label>\n                        <Form.Control type=\"number\" name=\"fish_length\" placeholder=\"Fish Length\" value={this.state.fish_length} onChange={this.changeHandler}/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridZip\">\n                        <Form.Label>Weight Pounds&Ounces</Form.Label>\n                        <Form.Control type=\"number\" name=\"fish_weight\" placeholder=\"Fish Weight\" value={this.state.fish_weight} onChange={this.changeHandler}/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridState\">\n                        <Form.Label>Tide</Form.Label>\n                        <Form.Control as=\"select\" name=\"tide\" placeholder=\"tide\" value={this.state.tide} onChange={this.changeHandler} >\n                            <option>High</option>\n                            <option>Low</option>\n                            <option>Incoming</option>\n                            <option>Outgoing</option>\n                        </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridState\">\n                        <Form.Label>Moon Phase</Form.Label>\n                        <Form.Control as=\"select\" name=\"moon_phase\" placeholder=\"moon_phase\" value={this.state.moon_phase} onChange={this.changeHandler}>\n                            <option>Third Quarter</option>\n                            <option>Waning Gibbous</option>\n                            <option>Full Moon</option>\n                            <option>Waxing Gibbous</option>\n                            <option>First Quarter</option>\n                            <option>Waxing Crescent</option>\n                            <option>New Moon</option>\n                            <option>Waning Crescent</option>\n                        </Form.Control>\n                        </Form.Group>\n                    </Form.Row>\n                        \n                        <Form.Group as={Col} controlId=\"formGridAddress1\">\n                            <Form.Label>Rod Setup</Form.Label>\n                            <Form.Control as=\"textarea\" placeholder=\"Rod Setup\" name=\"rod_setup\"  value={this.state.rod_setup} onChange={this.changeHandler} />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridAddress2\">\n                            <Form.Label>Notes on Catch</Form.Label>\n                            <Form.Control as=\"textarea\" placeholder=\"Notes...\" name=\"note\" value={this.state.note} onChange={this.changeHandler}/>\n                        </Form.Group>\n\n                    <Button type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n           \n            </Modal.Footer>\n          </Modal>\n            // <form onSubmit={this.submitHandler}>\n            //     <input type=\"text\" name=\"title\" placeholder=\"pin title\" value={this.state.title} onChange={this.changeHandler}/>\n            //     <input type=\"number\" name=\"date\" placeholder=\"date\" value={this.state.date} onChange={this.changeHandler}/>\n            //     <input type=\"text\" name=\"fish_type\" placeholder=\"fish_type\" value={this.state.fish_type} onChange={this.changeHandler}/>\n            //     <input type=\"number\" name=\"fish_length\" placeholder=\"fish_length\" value={this.state.fish_length} onChange={this.changeHandler}/>\n            //     <input type=\"number\" name=\"fish_weight\" placeholder=\"fish_weight\" value={this.state.fish_weight} onChange={this.changeHandler}/>\n            //     <input type=\"text\" name=\"moon_phase\" placeholder=\"moon_phase\" value={this.state.moon_phase} onChange={this.changeHandler}/>\n            //     <input type=\"text\" name=\"tide\" placeholder=\"tide\" value={this.state.tide} onChange={this.changeHandler}/>\n            //     <input type=\"text\" name=\"rod_setup\" placeholder=\"rod_setup\" value={this.state.rod_setup} onChange={this.changeHandler}/>\n            //     <input type=\"text\" name=\"note\" placeholder=\"note\" value={this.state.note} onChange={this.changeHandler}/>\n            //     <input type=\"text\" name=\"image\" placeholder=\"image\" value={this.state.image} onChange={this.changeHandler}/>\n            //     <input type=\"submit\" value=\"Add Pin\"/>\n            // </form>\n        )\n    }\n}\n\nexport default AddPinForm","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/EditPinForm.js",[],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/AddJournalForm.js",["130"],"import React from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport FishTypeOption from './FishTypeOption'\n\nclass AddJournalForm extends React.Component {\n\n    state = {\n        date: \"\",\n        fish_type: \"\",\n        fish_length: \"\",\n        fish_weight: \"\",\n        moon_phase: \"\",\n        tide: \"\",\n        rod_setup: \"\",\n        note: \"\",\n        image: \"\",\n        pin_id: \"\",\n        sea_creatures: [],\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:3000/api/v1/sea_creatures')\n        .then(response => response.json())\n        .then(data => this.setState({sea_creatures: data}));\n    }\n\n    changeHandler = (event) => {\n        this.setState({ [event.target.name]: event.target.value })\n        console.log(this.state.fish_type)\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault()\n        this.checkImage()\n      \n        console.log(this.state)\n        setTimeout(() => {\n            this.props.addJournalEntry(this.state, this.props.selectedPin)\n        }, 2000);\n        setTimeout(() => {\n            \n            this.setState({ \n                date: \"\",\n                fish_type: \"\",\n                fish_length: \"\",\n                fish_weight: \"\",\n                moon_phase: \"\",\n                tide: \"\",\n                rod_setup: \"\",\n                note: \"\",\n                image: \"\",\n                pin_id: \"\",\n            })\n        }, 2000);\n        \n     }\n\n    checkImage = () => {\n        let creatureImg = this.state.sea_creatures.filter(creature => creature.species_name === this.state.fish_type)\n        {this.state.image === \"\" && this.setState({ image: creatureImg[0].image })}\n    }\n\n    renderCreaturesData = () => {\n        let filterByRegion = this.state.sea_creatures.filter(creature => creature.fisheries_region.includes(\"Greater Atlantic\")) \n        return filterByRegion.map(creature => <FishTypeOption key={creature.id} creature={creature}/>)\n    }\n\n    render(){\n        return (\n            <Modal\n            show={this.props.addJournalClicked}\n            onHide={this.props.addJournalClicked}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Header closeButton>\n              <Modal.Title id=\"contained-modal-title-vcenter\">\n                Add New Fish Journal Entry \n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={this.submitHandler}>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridState\">\n                        <Form.Label>Fish Type</Form.Label>\n                        <Form.Control as=\"select\" htmlSize={5} name=\"fish_type\" placeholder=\"fish_type\" value={this.state.fish_type} onChange={this.changeHandler}>\n                            {this.renderCreaturesData()}\n                        </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridPassword\">\n                        <Form.Label>Image url</Form.Label>\n                        <Form.Control type=\"text\" name=\"image\" placeholder=\"Image url\" value={this.state.image} onChange={this.changeHandler} />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\n                        <Form.Label>Date Caught</Form.Label>\n                        <Form.Control type=\"number\" name=\"date\" placeholder=\"Date Caught\" value={this.state.date} onChange={this.changeHandler} />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridCity\">\n                        <Form.Label>Length Feet&Inches</Form.Label>\n                        <Form.Control type=\"number\" name=\"fish_length\" placeholder=\"Fish Length\" value={this.state.fish_length} onChange={this.changeHandler}/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridZip\">\n                        <Form.Label>Weight Pounds&Ounces</Form.Label>\n                        <Form.Control type=\"number\" name=\"fish_weight\" placeholder=\"Fish Weight\" value={this.state.fish_weight} onChange={this.changeHandler}/>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridState\">\n                        <Form.Label>Tide</Form.Label>\n                        <Form.Control as=\"select\" name=\"tide\" placeholder=\"tide\" value={this.state.tide} onChange={this.changeHandler} >\n                            <option>High</option>\n                            <option>Low</option>\n                            <option>Incoming</option>\n                            <option>Outgoing</option>\n                        </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridState\">\n                        <Form.Label>Moon Phase</Form.Label>\n                        <Form.Control as=\"select\" name=\"moon_phase\" placeholder=\"moon_phase\" value={this.state.moon_phase} onChange={this.changeHandler}>\n                            <option>Third Quarter</option>\n                            <option>Waning Gibbous</option>\n                            <option>Full Moon</option>\n                            <option>Waxing Gibbous</option>\n                            <option>First Quarter</option>\n                            <option>Waxing Crescent</option>\n                            <option>New Moon</option>\n                            <option>Waning Crescent</option>\n                        </Form.Control>\n                        </Form.Group>\n                    </Form.Row>\n                        \n                        <Form.Group as={Col} controlId=\"formGridAddress1\">\n                            <Form.Label>Rod Setup</Form.Label>\n                            <Form.Control as=\"textarea\" placeholder=\"Rod Setup\" name=\"rod_setup\"  value={this.state.rod_setup} onChange={this.changeHandler} />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridAddress2\">\n                            <Form.Label>Notes on Catch</Form.Label>\n                            <Form.Control as=\"textarea\" placeholder=\"Notes...\" name=\"note\" value={this.state.note} onChange={this.changeHandler}/>\n                        </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n           \n            </Modal.Footer>\n          </Modal>\n        )\n    }\n\n}\n\nexport default AddJournalForm","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/EditJournalForm.js",[],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Container/MapContainer.js",["131","132","133"],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/index.js",[],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/mapStyles.js",["134"],"export default [\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#f1efe8\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape.man_made\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"gamma\": \"1.19\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape.man_made\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"gamma\": \"0.00\"\n            },\n            {\n                \"weight\": \"2.07\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#b2ac83\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#b2ac83\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#8ac0c4\"\n            }\n        ]\n    }]","/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Container/FishContainer.js",[],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/FishCard.js",[],["135","136"],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/NavigationBar.js",["137","138","139","140","141","142"],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/FishSearchForm.js",[],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/FishTypeOption.js",[],["143","144"],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/DoubleCheckDelete.js",[],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/DoubleCheckDeletePin.js",[],"/Users/gregwright/Development/code/FinalApp/frontend_live_fishing_journal/src/Component/MoonPhase.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":16},{"ruleId":"145","replacedBy":"153"},{"ruleId":"147","replacedBy":"154"},{"ruleId":"145","replacedBy":"155"},{"ruleId":"147","replacedBy":"156"},{"ruleId":"149","severity":1,"message":"157","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":15},{"ruleId":"149","severity":1,"message":"158","line":5,"column":8,"nodeType":"151","messageId":"152","endLine":5,"endColumn":19},{"ruleId":"145","replacedBy":"159"},{"ruleId":"147","replacedBy":"160"},{"ruleId":"145","replacedBy":"161"},{"ruleId":"147","replacedBy":"162"},{"ruleId":"145","replacedBy":"163"},{"ruleId":"147","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":49,"column":9,"nodeType":"167","messageId":"168","endLine":49,"endColumn":84},{"ruleId":"165","severity":1,"message":"166","line":63,"column":9,"nodeType":"167","messageId":"168","endLine":63,"endColumn":84},{"ruleId":"149","severity":1,"message":"169","line":11,"column":8,"nodeType":"151","messageId":"152","endLine":11,"endColumn":17},{"ruleId":"149","severity":1,"message":"170","line":12,"column":8,"nodeType":"151","messageId":"152","endLine":12,"endColumn":11},{"ruleId":"149","severity":1,"message":"171","line":13,"column":8,"nodeType":"151","messageId":"152","endLine":13,"endColumn":11},{"ruleId":"172","severity":1,"message":"173","line":1,"column":1,"nodeType":"174","endLine":82,"endColumn":7},{"ruleId":"145","replacedBy":"175"},{"ruleId":"147","replacedBy":"176"},{"ruleId":"149","severity":1,"message":"177","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":21},{"ruleId":"149","severity":1,"message":"178","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":17},{"ruleId":"149","severity":1,"message":"179","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":19},{"ruleId":"149","severity":1,"message":"180","line":7,"column":8,"nodeType":"151","messageId":"152","endLine":7,"endColumn":12},{"ruleId":"149","severity":1,"message":"181","line":8,"column":8,"nodeType":"151","messageId":"152","endLine":8,"endColumn":19},{"ruleId":"149","severity":1,"message":"182","line":9,"column":8,"nodeType":"151","messageId":"152","endLine":9,"endColumn":14},{"ruleId":"145","replacedBy":"183"},{"ruleId":"147","replacedBy":"184"},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["185"],["186"],["185"],["186"],"'Route' is defined but never used.","'ProfileCard' is defined but never used.",["185"],["186"],["185"],["186"],["185"],["186"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["185"],["186"],"'FishContainer' is defined but never used.","'MoonPhase' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.",["185"],["186"],"no-global-assign","no-unsafe-negation"]